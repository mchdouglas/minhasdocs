{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Olaaa, neste site voc\u00ea encontrar\u00e1 v\u00e1rias dicas, tutoriais e diversas documenta\u00e7\u00f5es de ferramentas que utilizo no meu dia a dia. Espero que seja de grande utilidade para voc\u00ea.","title":"Home"},{"location":"Come\u00e7ando com mkdocs/","text":"Come\u00e7ando com mkdocs pipenv shell - Para entrar em um ambiente virtual. pipenv install mkdocs - Instalar mkdocs. mkdocs new [dir-name] - Criar novo projeto. pipenv install mkdocs-[nome-do-tema] - Instalar tema para o mkdocs. mkdocs serve - Iniciar servidor de desenvolvimento. mkdocs build - Fazer build. mkdocs gh-deploy - Fazer deploy.","title":"Come\u00e7ando com mkdocs"},{"location":"Come\u00e7ando com mkdocs/#comecando-com-mkdocs","text":"pipenv shell - Para entrar em um ambiente virtual. pipenv install mkdocs - Instalar mkdocs. mkdocs new [dir-name] - Criar novo projeto. pipenv install mkdocs-[nome-do-tema] - Instalar tema para o mkdocs. mkdocs serve - Iniciar servidor de desenvolvimento. mkdocs build - Fazer build. mkdocs gh-deploy - Fazer deploy.","title":"Come\u00e7ando com mkdocs"},{"location":"axiosVue/","text":"Axios no VueJs vue add axios - Para adicionar ao seu projeto vue. Agora iremos fazer uma breve configura\u00e7\u00e3o para n\u00e3o ficarmos repetindo a url de requisi\u00e7\u00e3o. Para isso voc\u00ea ir\u00e1 criar um arquivo chamado .env.local e dentro do arquivo ir\u00e1 escrever os seguintes comandos: VUE_APP_BASE_URL=http://sua-url-de-requisi\u00e7\u00e3o . Depois dentro do arquivo de configura\u00e7\u00e3o colar o seguinte c\u00f3digo: let config = { baseURL: process.env.VUE_APP_BASE_URL }","title":"axiosVue"},{"location":"axiosVue/#axios-no-vuejs","text":"vue add axios - Para adicionar ao seu projeto vue. Agora iremos fazer uma breve configura\u00e7\u00e3o para n\u00e3o ficarmos repetindo a url de requisi\u00e7\u00e3o. Para isso voc\u00ea ir\u00e1 criar um arquivo chamado .env.local e dentro do arquivo ir\u00e1 escrever os seguintes comandos: VUE_APP_BASE_URL=http://sua-url-de-requisi\u00e7\u00e3o . Depois dentro do arquivo de configura\u00e7\u00e3o colar o seguinte c\u00f3digo: let config = { baseURL: process.env.VUE_APP_BASE_URL }","title":"Axios no VueJs"},{"location":"git/","text":"Git Se voc\u00ea caiu nesta documenta\u00e7\u00e3o provavelmente criou vergonha na cara e decidiu aprender sobre o git (na verdade isso \u00e9 mais um tutorial do que uma documenta\u00e7\u00e3o, que serve tanto para eu aprender a passar meus conhecimentos como para voc\u00ea que est\u00e1 lendo aprender). Vamooos nessaaa!! Antes de come\u00e7armos e sairmos digitando comandos que nem loucos, vamos a uma breve e chata(por\u00e9m importante) hist\u00f3ria sobre o git. Uma Breve Hist\u00f3ria do Git Uma Breve Hist\u00f3ria do Git Como muitas coisas na vida, o Git come\u00e7ou com um pouco de destrui\u00e7\u00e3o criativa e uma controv\u00e9rsia de fogo. O n\u00facleo (kernel) do Linux \u00e9 um projeto de c\u00f3digo aberto com um escopo bastante grande. A maior parte da vida da manuten\u00e7\u00e3o do n\u00facleo o Linux (1991-2002), as mudan\u00e7as no c\u00f3digo eram compartilhadas como corre\u00e7\u00f5es e arquivos. Em 2002, o projeto do n\u00facleo do Linux come\u00e7ou usar uma DVCS propriet\u00e1ria chamada BitKeeper. Em 2005, a rela\u00e7\u00e3o entre a comunidade que desenvolveu o n\u00facleo do Linux e a empresa que desenvolveu BitKeeper quebrou em peda\u00e7os, e a ferramenta passou a ser paga. Isto alertou a comunidade que desenvolvia o Linux (e especialmente Linux Torvalds, o criador do Linux) a desenvolver a sua pr\u00f3pria ferramente baseada em li\u00e7\u00f5es aprendidas ao usar o BitKeeper. Algumas metas do novo sistema era os seguintes: - Velocidade - Projeto simples - Forte suporte para desenvolvimento n\u00e3o-linear (milhares de ramos paralelos) - Completamente distribu\u00eddo - Capaz de lidar com projetos grandes como o n\u00facleo o Linux com efici\u00eancia (velocidade e tamanho dos dados) Desde seu nascimento em 2005, Git evoluiu e amadureceu para ser f\u00e1cil de usar e ainda reter essas qualidades iniciais. Ele \u00e9 incrivelmente r\u00e1pido, \u00e9 muito eficiente com projetos grandes, e ele tem um incr\u00edvel sistema de ramos para desenvolvimento n\u00e3o linear. [Clique aqui para acessar essa hist\u00f3ria](https://git-scm.com/book/pt-br/v2/Come%C3%A7ando-Uma-Breve-Hist%C3%B3ria-do-Git) . # Primeiros passos Primeiramente iremos instalar o git, no meu caso utilizo o sistema operacional linux mint e para este deve ser utilizado o seguinte comando: sudo apt install git Se voc\u00ea utiliza outro sistema operacional acesse: esse guia de downloads Configura\u00e7\u00e3o inicial Seguidamente utilizaremos o git config para a configura\u00e7\u00e3o do nome do usu\u00e1rio e do email.Abram o terminal e digitem: git config --global user.name \"Digite aqui seu nome de usu\u00e1rio\" E se voc\u00ea achar que n\u00e3o deu certo s\u00f3 porque n\u00e3o apareceu nada no seu terminal voc\u00ea est\u00e1 errado. Confiem em mim kkkk, o user name j\u00e1 est\u00e1 configurado. Agora vamos configurar o email, se liga no comando abaixo: git config --global user.email \"Digite aqui seu email\" Agora para realmente saber se tudo deu certo digite: git config user.name que dever\u00e1 retornar o nome do usu\u00e1rio. E do email fica como tarefa hahaa. Inicializando um reposit\u00f3rio A primeira etapa para utiliza\u00e7\u00e3o do git, \u00e9 voc\u00ea definir o seu Working Directory(Diret\u00f3rio de trabalho). Para isso existem v\u00e1rias formas. Vamos as duas principais: Para novos projetos, onde voc\u00ea ira iniciar e enviar os arquivos locais existentes para um reposit\u00f3rio vazio, vamos utilizar os seguintes comandos: git init git add remote origin seurepositorio Para projetos que j\u00e1 existem no servidor, voc\u00ea ira utilizar os seguintes comandos: git clone seurepositorio Adicionando arquivos O primeiro comando que precisamos utilizar \u00e9 para adicionar arquivos ao seu WorkTree. O comando git \u00e9 git add . Vamos aos exemplos: Adicionar o arquivo readme.md : git add readme.md Adicionar todos arquivos js : git add .js Adicionar todos os arquivos : git add . Commitando as altera\u00e7\u00f5es Ap\u00f3s adicionar os arquivos, precisamos informar as altera\u00e7\u00f5es, mensagens que eles sofreram. Para isso vamos utilizar o comando git commit . Vamos aos exemplos: Enviando o primeiro commit: git commit -m \"Primeiro commit\" Commit de uma alera\u00e7\u00e3o: git commit -m \"Foi alterado tal coisa\" Enviando as altea\u00e7\u00f5es para o servidor Ap\u00f3s definir seus commits, precisamos enviar os mesmos para o servidor. Para isso utilizamos o comando git push Comando padr\u00e3o para enviar git push -u origin SEUBRANCH o par\u00e2metro -u indica o usu\u00e1rio que est\u00e1 no git config o paramentro origin indica que ir\u00e1 para a origem no proximo par\u00e2metro SEUBRANCH indica o branch que voc\u00ea esta trabalhando . Extras As vezes ficar digitando a senha toda vez que for dar um push pode ser um pouco cansativo.Para isso existe uma configura\u00e7\u00e3o de chave ssh que pode te ajudar muito com essa situa\u00e7\u00e3o. Ent\u00e3o siga as instru\u00e7\u00f5es abaixo para gerar uma chave ssh e adicion\u00e1-la no seu github. Gerando a chave ssh Primeiramente abra o terminal e cole o seguinte comando: ssh-keygen -t rsa -b 4096 -C \"seu-emaill@examplo.com\" . E se aparecer algumas perguntas s\u00f3 vai dando enter (s\u00e3o configura\u00e7\u00f5es desnecess\u00e1rias). Pronto agora sua chave foi gerada e para acess\u00e1-la digite cd ~/.ssh . Vinculando ao Github Agora basta copiar a chave publica dentro do direto\u0155io que voc\u00ea acessou o arquivo tem o seguinte nome id_rsa.pub . Depois de ter copiado o conte\u00fado do arquivo basta acessar sua conta no github ir nas configura\u00e7\u00f5es e procurar por SSH and GPG keys, vai em New SSH Key, feito isso aparecer\u00e1 pra voc\u00ea dar um t\u00edtulo para sua chave e bem abaixo um campo para colar ela. Feito isso est\u00e1 tudo configurado. Para saber se est\u00e1 tudo certo digite o seguinte comando para testar: ssh -T git@github.com se retornar com seu username e uma mensagem de sucesso est\u00e1 tudo correto. Alguns problemas As vezes voc\u00ea j\u00e1 deve ter um reposit\u00f3rio conectado por https, e n\u00e3o por SSH. Para ver na qual est\u00e1 conectado digite git remote -v , se retornar algo como origin https://github.com/...... voc\u00ea est\u00e1 usando o servi\u00e7o de http e para funcionar o ssh voc\u00ea precisa remover esse controle remoto com git remote rm origin , logo em seguida copie o link SSH e adicone como novo controle remoto com o seguinte comando git remote add origin link_ssh_copiado . Tudo dever\u00e1 estar funcionando. Voc\u00ea pode encontrar esse tutorial aqui .","title":"Git"},{"location":"git/#git","text":"Se voc\u00ea caiu nesta documenta\u00e7\u00e3o provavelmente criou vergonha na cara e decidiu aprender sobre o git (na verdade isso \u00e9 mais um tutorial do que uma documenta\u00e7\u00e3o, que serve tanto para eu aprender a passar meus conhecimentos como para voc\u00ea que est\u00e1 lendo aprender).","title":"Git"},{"location":"git/#vamooos-nessaaa","text":"Antes de come\u00e7armos e sairmos digitando comandos que nem loucos, vamos a uma breve e chata(por\u00e9m importante) hist\u00f3ria sobre o git.","title":"Vamooos nessaaa!!"},{"location":"git/#uma-breve-historia-do-git","text":"Uma Breve Hist\u00f3ria do Git Como muitas coisas na vida, o Git come\u00e7ou com um pouco de destrui\u00e7\u00e3o criativa e uma controv\u00e9rsia de fogo. O n\u00facleo (kernel) do Linux \u00e9 um projeto de c\u00f3digo aberto com um escopo bastante grande. A maior parte da vida da manuten\u00e7\u00e3o do n\u00facleo o Linux (1991-2002), as mudan\u00e7as no c\u00f3digo eram compartilhadas como corre\u00e7\u00f5es e arquivos. Em 2002, o projeto do n\u00facleo do Linux come\u00e7ou usar uma DVCS propriet\u00e1ria chamada BitKeeper. Em 2005, a rela\u00e7\u00e3o entre a comunidade que desenvolveu o n\u00facleo do Linux e a empresa que desenvolveu BitKeeper quebrou em peda\u00e7os, e a ferramenta passou a ser paga. Isto alertou a comunidade que desenvolvia o Linux (e especialmente Linux Torvalds, o criador do Linux) a desenvolver a sua pr\u00f3pria ferramente baseada em li\u00e7\u00f5es aprendidas ao usar o BitKeeper. Algumas metas do novo sistema era os seguintes: - Velocidade - Projeto simples - Forte suporte para desenvolvimento n\u00e3o-linear (milhares de ramos paralelos) - Completamente distribu\u00eddo - Capaz de lidar com projetos grandes como o n\u00facleo o Linux com efici\u00eancia (velocidade e tamanho dos dados) Desde seu nascimento em 2005, Git evoluiu e amadureceu para ser f\u00e1cil de usar e ainda reter essas qualidades iniciais. Ele \u00e9 incrivelmente r\u00e1pido, \u00e9 muito eficiente com projetos grandes, e ele tem um incr\u00edvel sistema de ramos para desenvolvimento n\u00e3o linear. [Clique aqui para acessar essa hist\u00f3ria](https://git-scm.com/book/pt-br/v2/Come%C3%A7ando-Uma-Breve-Hist%C3%B3ria-do-Git) . # Primeiros passos Primeiramente iremos instalar o git, no meu caso utilizo o sistema operacional linux mint e para este deve ser utilizado o seguinte comando: sudo apt install git Se voc\u00ea utiliza outro sistema operacional acesse: esse guia de downloads","title":"Uma Breve Hist\u00f3ria do Git"},{"location":"git/#configuracao-inicial","text":"Seguidamente utilizaremos o git config para a configura\u00e7\u00e3o do nome do usu\u00e1rio e do email.Abram o terminal e digitem: git config --global user.name \"Digite aqui seu nome de usu\u00e1rio\" E se voc\u00ea achar que n\u00e3o deu certo s\u00f3 porque n\u00e3o apareceu nada no seu terminal voc\u00ea est\u00e1 errado. Confiem em mim kkkk, o user name j\u00e1 est\u00e1 configurado. Agora vamos configurar o email, se liga no comando abaixo: git config --global user.email \"Digite aqui seu email\" Agora para realmente saber se tudo deu certo digite: git config user.name que dever\u00e1 retornar o nome do usu\u00e1rio. E do email fica como tarefa hahaa.","title":"Configura\u00e7\u00e3o inicial"},{"location":"git/#inicializando-um-repositorio","text":"A primeira etapa para utiliza\u00e7\u00e3o do git, \u00e9 voc\u00ea definir o seu Working Directory(Diret\u00f3rio de trabalho). Para isso existem v\u00e1rias formas. Vamos as duas principais: Para novos projetos, onde voc\u00ea ira iniciar e enviar os arquivos locais existentes para um reposit\u00f3rio vazio, vamos utilizar os seguintes comandos: git init git add remote origin seurepositorio Para projetos que j\u00e1 existem no servidor, voc\u00ea ira utilizar os seguintes comandos: git clone seurepositorio","title":"Inicializando um reposit\u00f3rio"},{"location":"git/#adicionando-arquivos","text":"O primeiro comando que precisamos utilizar \u00e9 para adicionar arquivos ao seu WorkTree. O comando git \u00e9 git add . Vamos aos exemplos: Adicionar o arquivo readme.md : git add readme.md Adicionar todos arquivos js : git add .js Adicionar todos os arquivos : git add .","title":"Adicionando arquivos"},{"location":"git/#commitando-as-alteracoes","text":"Ap\u00f3s adicionar os arquivos, precisamos informar as altera\u00e7\u00f5es, mensagens que eles sofreram. Para isso vamos utilizar o comando git commit . Vamos aos exemplos: Enviando o primeiro commit: git commit -m \"Primeiro commit\" Commit de uma alera\u00e7\u00e3o: git commit -m \"Foi alterado tal coisa\"","title":"Commitando as altera\u00e7\u00f5es"},{"location":"git/#enviando-as-alteacoes-para-o-servidor","text":"Ap\u00f3s definir seus commits, precisamos enviar os mesmos para o servidor. Para isso utilizamos o comando git push Comando padr\u00e3o para enviar git push -u origin SEUBRANCH o par\u00e2metro -u indica o usu\u00e1rio que est\u00e1 no git config o paramentro origin indica que ir\u00e1 para a origem no proximo par\u00e2metro SEUBRANCH indica o branch que voc\u00ea esta trabalhando .","title":"Enviando as altea\u00e7\u00f5es para o servidor"},{"location":"git/#extras","text":"As vezes ficar digitando a senha toda vez que for dar um push pode ser um pouco cansativo.Para isso existe uma configura\u00e7\u00e3o de chave ssh que pode te ajudar muito com essa situa\u00e7\u00e3o. Ent\u00e3o siga as instru\u00e7\u00f5es abaixo para gerar uma chave ssh e adicion\u00e1-la no seu github.","title":"Extras"},{"location":"git/#gerando-a-chave-ssh","text":"Primeiramente abra o terminal e cole o seguinte comando: ssh-keygen -t rsa -b 4096 -C \"seu-emaill@examplo.com\" . E se aparecer algumas perguntas s\u00f3 vai dando enter (s\u00e3o configura\u00e7\u00f5es desnecess\u00e1rias). Pronto agora sua chave foi gerada e para acess\u00e1-la digite cd ~/.ssh .","title":"Gerando a chave ssh"},{"location":"git/#vinculando-ao-github","text":"Agora basta copiar a chave publica dentro do direto\u0155io que voc\u00ea acessou o arquivo tem o seguinte nome id_rsa.pub . Depois de ter copiado o conte\u00fado do arquivo basta acessar sua conta no github ir nas configura\u00e7\u00f5es e procurar por SSH and GPG keys, vai em New SSH Key, feito isso aparecer\u00e1 pra voc\u00ea dar um t\u00edtulo para sua chave e bem abaixo um campo para colar ela. Feito isso est\u00e1 tudo configurado. Para saber se est\u00e1 tudo certo digite o seguinte comando para testar: ssh -T git@github.com se retornar com seu username e uma mensagem de sucesso est\u00e1 tudo correto.","title":"Vinculando ao Github"},{"location":"git/#alguns-problemas","text":"As vezes voc\u00ea j\u00e1 deve ter um reposit\u00f3rio conectado por https, e n\u00e3o por SSH. Para ver na qual est\u00e1 conectado digite git remote -v , se retornar algo como origin https://github.com/...... voc\u00ea est\u00e1 usando o servi\u00e7o de http e para funcionar o ssh voc\u00ea precisa remover esse controle remoto com git remote rm origin , logo em seguida copie o link SSH e adicone como novo controle remoto com o seguinte comando git remote add origin link_ssh_copiado . Tudo dever\u00e1 estar funcionando. Voc\u00ea pode encontrar esse tutorial aqui .","title":"Alguns problemas"},{"location":"vue/","text":"Iniciando com vue js console.log('estudando vue.js') O que \u00e9 vue.js? Um framework progressivo para a constru\u00e7\u00e3o de interfaces de usu\u00e1rio. Renderiza\u00e7\u00e3o Declarativa No n\u00facleo do Vue.js est\u00e1 um sistema que nos permite declarativamente renderizar dados no DOM (Document Object Model) usando uma sintaxe de template simples. S\u00edmbolo de eventos no vue O s\u00edmbolo de eventos no vue \u00e9 o @ . O que \u00e9 um componente no vue.js? Componentes s\u00e3o inst\u00e2ncias reutiliz\u00e1veis do Vue com um nome. \u00c9 um arquivo com marca\u00e7\u00e3o de texto, estilo e scripts. Comunica\u00e7\u00e3o atrav\u00e9s de propriedades ( props ) Para podermos passar dados a partir de um componente pai, o componente filho deve declarar explicitamente oque \u00e9 esperado. Passando dados para o componente pai ( emiss\u00e3o ) Como no Vue o fluxo de dados \u00e9 unilateral e as propriedades n\u00e3o podem ser passadas para o componente pai. Ent\u00e3o podemos usufruir do sistemas de eventos personalizados do Vue, para podermos emitir eventos para o componente pai atrav\u00e9s do $emit , assim subindo n\u00edveis e podendo passar dados. O que \u00e9 um bind em vue Serve para ligar a um atributo (pode ser v-bind ou : ).","title":"Vue"},{"location":"vue/#iniciando-com-vue-js","text":"console.log('estudando vue.js')","title":"Iniciando com vue js"},{"location":"vue/#o-que-e-vuejs","text":"Um framework progressivo para a constru\u00e7\u00e3o de interfaces de usu\u00e1rio.","title":"O que \u00e9 vue.js?"},{"location":"vue/#renderizacao-declarativa","text":"No n\u00facleo do Vue.js est\u00e1 um sistema que nos permite declarativamente renderizar dados no DOM (Document Object Model) usando uma sintaxe de template simples.","title":"Renderiza\u00e7\u00e3o Declarativa"},{"location":"vue/#simbolo-de-eventos-no-vue","text":"O s\u00edmbolo de eventos no vue \u00e9 o @ .","title":"S\u00edmbolo de eventos no vue"},{"location":"vue/#o-que-e-um-componente-no-vuejs","text":"Componentes s\u00e3o inst\u00e2ncias reutiliz\u00e1veis do Vue com um nome. \u00c9 um arquivo com marca\u00e7\u00e3o de texto, estilo e scripts.","title":"O que \u00e9 um componente no vue.js?"},{"location":"vue/#comunicacao-atraves-de-propriedades-props","text":"Para podermos passar dados a partir de um componente pai, o componente filho deve declarar explicitamente oque \u00e9 esperado.","title":"Comunica\u00e7\u00e3o atrav\u00e9s de propriedades (props)"},{"location":"vue/#passando-dados-para-o-componente-pai-emissao","text":"Como no Vue o fluxo de dados \u00e9 unilateral e as propriedades n\u00e3o podem ser passadas para o componente pai. Ent\u00e3o podemos usufruir do sistemas de eventos personalizados do Vue, para podermos emitir eventos para o componente pai atrav\u00e9s do $emit , assim subindo n\u00edveis e podendo passar dados.","title":"Passando dados para o componente pai (emiss\u00e3o)"},{"location":"vue/#o-que-e-um-bind-em-vue","text":"Serve para ligar a um atributo (pode ser v-bind ou : ).","title":"O que \u00e9 um bind em vue"},{"location":"vuetify/","text":"Vuetify vue add vuetify - Para adicionar ao seu projeto. Layouts pr\u00e9 feitos: Acesse aqui. Acesse a documenta\u00e7\u00e3o do vuetify: Documenta\u00e7\u00e3o do vuetify .","title":"Vuetify"},{"location":"vuetify/#vuetify","text":"vue add vuetify - Para adicionar ao seu projeto. Layouts pr\u00e9 feitos: Acesse aqui. Acesse a documenta\u00e7\u00e3o do vuetify: Documenta\u00e7\u00e3o do vuetify .","title":"Vuetify"}]}